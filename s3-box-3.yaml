
esphome:
  name: s3-test
  friendly_name: S3-test
  platformio_options:
    board_build.flash_mode: dio

esp32:
  board: esp32s3box
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_ESP32S3_DATA_CACHE_64KB: "y"
      CONFIG_ESP32S3_DATA_CACHE_LINE_64B: "y"
      CONFIG_AUDIO_BOARD_CUSTOM: "y"
      CONFIG_ESP32_S3_BOX_3_BOARD: "y"
    components:
      - name: esp32_s3_box_3_board
        source: github://jesserockz/esp32-s3-box-3-board@main
        refresh: 0s

# Enable logging
logger:
  hardware_uart: USB_SERIAL_JTAG
  level: DEBUG
  logs:
    component: ERROR

# Enable Home Assistant API
api:
  encryption:
    key: 

ota:
  password: 

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: 
    password: 

captive_portal:

time:
  - platform: homeassistant
    id: hatime
    timezone: Europe/Budapest

# dashboard_import:
#   package_import_url: github://esphome/firmware/voice-assistant/esp32-s3-box.yaml@main


binary_sensor:
  - platform: gpio
    pin:
      number: GPIO1
      inverted: true
    name: "Mute"

  - platform: gpio
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
      inverted: true
    name: Top Left Button
    disabled_by_default: true
    on_click:
      - if:
          condition:
            switch.is_off: use_wake_word
          then:
            - if:
                condition: voice_assistant.is_running
                then:
                  - voice_assistant.stop:
                  - script.execute: reset_led
                else:
                  - voice_assistant.start:
          else:
            - voice_assistant.stop
            - delay: 1s
            - script.execute: reset_led
            - script.wait: reset_led
            - voice_assistant.start_continuous:
  - platform: status
    id: api_connection
    filters:
      - delayed_on: 1s
    on_press:
      - if:
          condition:
            switch.is_on: use_wake_word
          then:
            - voice_assistant.start_continuous:
    on_release:
      - if:
          condition:
            switch.is_on: use_wake_word
          then:
            - voice_assistant.stop:

output:
  - platform: ledc
    pin: GPIO47
    id: backlight_output

light:
  - platform: monochromatic
    output: backlight_output
    name: LCD Backlight
    id: led
    restore_mode: ALWAYS_OFF
    disabled_by_default: true
    default_transition_length: 0s
    effects:
      - pulse:
          name: "Slow Pulse"
          transition_length: 250ms
          update_interval: 250ms
      - pulse:
          name: "Fast Pulse"
          transition_length: 50ms
          update_interval: 50ms

microphone:
  - platform: esp_adf
    id: box_mic

speaker:
  - platform: esp_adf
    id: box_speaker

voice_assistant:
  id: va
  microphone: box_mic
  speaker: box_speaker
  use_wake_word: true
  noise_suppression_level: 2
  auto_gain: 31dBFS
  volume_multiplier: 2.0
  vad_threshold: 3
  on_listening:
    - light.turn_on:
        id: led
        brightness: 100%
        effect: "Slow Pulse"
    - display.page.show: page1
    - component.update: my_display
  on_tts_start:
    - light.turn_on:
        id: led
        brightness: 75%
        effect: "Slow Pulse"
    # - text_sensor.template.publish: 
    #     id: line2
    #     state: !lambda return x;
    - display.page.show: page2
    - component.update: my_display
  on_end:
    - delay: 100ms
    - wait_until:
        not:
          speaker.is_playing:
    - script.execute: reset_led
    - display.page.show: page0
    - component.update: my_display
  on_error:
    - light.turn_on:
        id: led
        brightness: 50%
        effect: "Fast Pulse"
    - delay: 1s
    - script.execute: reset_led
    - script.wait: reset_led
    - lambda: |-
        if (code == "wake-provider-missing" || code == "wake-engine-missing") {
          id(use_wake_word).turn_off();
        }
        if (message == "Could not request start.") {
          id(restart_script).execute();
        } 
        if (message == "Unexpected error during wake-word-detection") {
          id(restart_script).execute();
        } 
    - text_sensor.template.publish:
        id: line4
        state: !lambda return code;
    - text_sensor.template.publish:
        id: line5
        state: !lambda return message;
  on_stt_end:
    - text_sensor.template.publish:
        id: line1
        state: !lambda return x;
  on_client_connected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.start_continuous:
          - script.execute: reset_led
          - display.page.show: page0
          - component.update: my_display
  on_client_disconnected:
    - if:
        condition:
          switch.is_on: use_wake_word
        then:
          - voice_assistant.stop:
          - light.turn_off: led

script:
  - id: reset_led
    then:
      - if:
          condition:
            - switch.is_on: use_wake_word
            - switch.is_on: use_listen_light
          then:
            - light.turn_on:
                id: led
                brightness: 25%
                effect: none
            - component.update: my_display
          else:
            - light.turn_off: led
            - display.page.show: page3
            - component.update: my_display

  - id: restart_script
    then:
      - voice_assistant.stop
      - delay: 1s
      - text_sensor.template.publish:
          id: line4
          state: " "
      - text_sensor.template.publish:
          id: line5
          state: " "
      - voice_assistant.start_continuous

switch:
  - platform: template
    name: Use wake word
    id: use_wake_word
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - lambda: id(va).set_use_wake_word(true);
      - if:
          condition:
            not:
              - voice_assistant.is_running
          then:
            - voice_assistant.start_continuous
      - script.execute: reset_led
    on_turn_off:
      - voice_assistant.stop
      - lambda: id(va).set_use_wake_word(false);
      - script.execute: reset_led
  - platform: template
    name: Use Listen Light
    id: use_listen_light
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: config
    on_turn_on:
      - script.execute: reset_led
    on_turn_off:
      - script.execute: reset_led

external_components:
  # - source: github://pr#5230
  source: github://kiklhorn/esphome
  components: esp_adf
  refresh: 0s

esp_adf:
  # board: esp32s3box3
  board: esp32s3box

psram:
  mode: octal
  speed: 120MHz

font:
  - file: "gfonts://Roboto Condensed"
    glyphs: "!%()+,-/_.:°0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZÖÜÓŐÚÉÁŰÍ abcdefghijklmnopqrstuvwxyzöüóőúáűéí"
    id: font1
    size: 20

text_sensor:
  - id: line0
    platform: template
    on_value:
      then:
        - component.update: my_display
  - id: line1
    platform: template
    on_value:
      then:
        - component.update: my_display
  - id: line2
    platform: template
    on_value:
      then:
        - component.update: my_display
  - id: line3
    platform: template
    on_value:
      then:
        - component.update: my_display
  - id: line4
    platform: template
    on_value:
      then:
        - component.update: my_display
  - id: line5
    platform: template
    on_value:
      then:
        - component.update: my_display

image:
  - file: mdi:home-assistant
    id: idle
    resize: 240x240
  - file: mdi:comment-question-outline
    id: listening
    resize: 240x240
  - file: mdi:comment-check-outline
    id: speaking
    resize: 240x240

spi:
  clk_pin: GPIO7
  mosi_pin: GPIO6

display:
  - platform: ili9xxx
    model: S3BOX
    update_interval: 30s
    id: my_display
    cs_pin: GPIO5
    dc_pin: GPIO4
    pages:
      - id: page0
        lambda: |-
          it.image(40, 0, id(idle));
      - id: page1
        lambda: |-
          it.image(40, 0, id(listening));
      - id: page2
        lambda: |-
          it.image(40, 0, id(speaking));
      - id: page3
        lambda: |-
